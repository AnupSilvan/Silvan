#include "WiFiProv.h"  
#include "WiFi.h"      


const char *pop = "A1B2C3";                   // Proof of possession (POP) code
const char *service_name = "XYZ987";          // BLE service name
const char *service_key = NULL;               // NULL means no password
bool reset_provisioned = true;               


void SysProvEvent(arduino_event_t *sys_event) {
    switch (sys_event->event_id) {
        case ARDUINO_EVENT_WIFI_STA_GOT_IP:
            Serial.print("\nConnected IP address: ");
            Serial.println(IPAddress(sys_event->event_info.got_ip.ip_info.ip.addr));
            break;
        case ARDUINO_EVENT_WIFI_STA_DISCONNECTED:
            Serial.println("\nDisconnected. Reconnecting to the AP...");
            break;
        case ARDUINO_EVENT_PROV_START:
            Serial.println("\nProvisioning started. Use a smartphone app to provide Wi-Fi credentials.");
            break;
        case ARDUINO_EVENT_PROV_CRED_RECV: {
            Serial.println("\nReceived Wi-Fi credentials");

            //This will popup in ble APP for connecting 
            Serial.print("\tUser ID: ");
            Serial.println((const char *)sys_event->event_info.prov_cred_recv.ssid);
            Serial.print("\tPassword: ");
            Serial.println((const char *)sys_event->event_info.prov_cred_recv.password);
            break;
        }
        case ARDUINO_EVENT_PROV_CRED_FAIL: {
            Serial.println("\nProvisioning failed. Reset and try again.");
            if (sys_event->event_info.prov_fail_reason == WIFI_PROV_STA_AUTH_ERROR)
                Serial.println("\nIncorrect Wi-Fi AP password.");
            else
                Serial.println("\nWi-Fi AP not found. Consider adding \"nvs_flash_erase()\" before beginProvision().");
            break;
        }
        case ARDUINO_EVENT_PROV_CRED_SUCCESS:
            Serial.println("\nProvisioning Successful");
            break;
        case ARDUINO_EVENT_PROV_END:
            Serial.println("\nProvisioning Ended");
            break;
        default:
            break;
    }
}

void setup() {
    Serial.begin(115200); 
    WiFi.onEvent(SysProvEvent); 

    Serial.println("Begin Provisioning using BLE");
    
    uint8_t uuid[16] = {0xb4, 0xdf, 0x5a, 0x1c, 0x3f, 0x6b, 0xf4, 0xbf,
                        0xea, 0x4a, 0x82, 0x03, 0x04, 0x90, 0x1a, 0x02};
    
    WiFiProv.beginProvision(WIFI_PROV_SCHEME_BLE, WIFI_PROV_SCHEME_HANDLER_FREE_BTDM, 
                            WIFI_PROV_SECURITY_1, pop, service_name, service_key, uuid, reset_provisioned);
    WiFiProv.printQR(service_name, pop, "ble"); // For QR Code Printing
}

void loop() {


    
}


